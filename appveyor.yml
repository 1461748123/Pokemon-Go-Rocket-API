#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 0.0.0.{build}

branches:
  only:
  - master
  
# Do not build on tags
skip_tags: false

# Start builds on tags only
skip_non_tags: false

# Skipping commits affecting specific files
skip_commits:
  files:
  - '**\AssemblyInfo.*'
  - 'CHANGELOG.md'
  - 'README.md'

# 
pull_requests:
  do_not_increment_build_number: true
  
#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2017

# scripts that are called at very beginning, before repo cloning
init:
- ps: >-
    if ($env:APPVEYOR_REPO_TAG -eq "true")
    {
        $env:RocketBot2_Version = "$($env:APPVEYOR_REPO_TAG_NAME.Replace('v', ''))";
    }
    else
    {
        $env:RocketBot2_Version = "$($env:APPVEYOR_BUILD_VERSION)";
    }

# clone directory
clone_folder: c:\projects\rocketbot2

# fetch repository as zip archive
shallow_clone: false

# set clone depth
# clone entire repository history if not defined
#clone_depth:  5

# environment variables
environment:
#  matrix:
#    - ruby_version: "21" # Older version, but matches Travis-CI
#    - ruby_version: "21-x64"
  
  CHANGELOG_GITHUB_TOKEN:
    secure: yNRb78M1kncUfbzKLWl1igKg2piIARVYUpr0508PrTS7N/AwwnYozd+Ntr1gfUT+
  auth_token:
    secure: yNRb78M1kncUfbzKLWl1igKg2piIARVYUpr0508PrTS7N/AwwnYozd+Ntr1gfUT+
  github_user:
    secure: EHfj3CL5trOMzKP1sceM5A== 
  github_email:
    secure: G641hL9+GJDfG5+L1lw0guzFoZlPVu1Zp+P39/l7/rU=
  priv_key:
    secure: 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

# build cache to preserve files/folders between builds
#cache:
#  - packages -> **\packages.config  # preserve packages directory in the root of build folder but will reset it if packages.config is modified
#  - '%LocalAppData%\NuGet\Cache'

# scripts that run after cloning repository
install:
- git submodule update --init --recursive
#- rmdir PokeEase/platform /S /Q
#- Remove-Item item PokeEase\plugins -Recurse -Force
#- cd PokeEase && npm install && cd ..

# enable patching of AssemblyInfo.* files
assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: '$(RocketBot2_Version)'
  assembly_file_version: "1.0.0.0"
  assembly_informational_version: '$(APPVEYOR_REPO_TAG_NAME)'

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
#platform: x86
platform: Any CPU

# to add several platforms to build matrix:
#platform:
#  - x86
#  - Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# to add several configurations to build matrix:
#configuration:
#  - Debug
#  - Release

build:
  # MSBuild verbosity level
  verbosity: minimal

# scripts to run before build
before_build:
  - nuget restore
#  - cd PokeEase && npm run pack && cd ..

# scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
before_package:

# scripts to run after build
after_build:
- ps: >-
    Remove-Item "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)" -Recurse -ErrorAction Ignore;
    New-Item -ItemType Directory -Force -Path "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)";
    New-Item -ItemType Directory -Force -Path "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)";
    if ($env:PLATFORM -eq "x86")
    {
        Move-Item -Path "$($env:APPVEYOR_BUILD_FOLDER)\RocketBot2\bin\$($env:PLATFORM)\$($env:CONFIGURATION)" -Destination "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\RocketBot2" -Force;
    }  
    elseif ($env:PLATFORM -eq "x64")
    {
        Move-Item -Path "$($env:APPVEYOR_BUILD_FOLDER)\RocketBot2\bin\$($env:PLATFORM)\$($env:CONFIGURATION)" -Destination "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\RocketBot2" -Force;
    }
    elseif ($env:PLATFORM -eq "Any CPU")
    {
        Move-Item -Path "$($env:APPVEYOR_BUILD_FOLDER)\RocketBot2\bin\$($env:CONFIGURATION)" -Destination "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\RocketBot2" -Force;
    }
#    Move-Item -Path "$($env:APPVEYOR_BUILD_FOLDER)\PokeEase\build\android-debug.apk" -Destination "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\android-debug.apk" -Force;
#    Move-Item -Path "$($env:APPVEYOR_BUILD_FOLDER)\PokeEase\build\android-debug-unaligned.apk" -Destination "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\android-debug-unaligned.apk" -Force;
#    Move-Item -Path "$($env:APPVEYOR_BUILD_FOLDER)\PokeEase\build\android-release-unsigned.apk" -Destination "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\android-release-unsigned.apk" -Force;
#    Move-Item -Path "$($env:APPVEYOR_BUILD_FOLDER)\PokeEase\dist\win-ia32-unpacked" -Destination "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\PokeEase" -Force;
        
#    New-Item -ItemType Directory -Force -Path "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\RocketBot2\Android";
#    New-Item -ItemType Directory -Force -Path "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\RocketBot2\PokeEase";
#    Move-Item -Path "$($env:APPVEYOR_BUILD_FOLDER)\PokeEase\build\android-debug.apk" -Destination "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\RocketBot2\Android\android-debug.apk" -Force;
#    Move-Item -Path "$($env:APPVEYOR_BUILD_FOLDER)\PokeEase\build\android-debug-unaligned.apk" -Destination "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\RocketBot2\Android\android-debug-unaligned.apk" -Force;
#    Move-Item -Path "$($env:APPVEYOR_BUILD_FOLDER)\PokeEase\build\android-release-unsigned.apk" -Destination "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\RocketBot2\Android\android-release-unsigned.apk" -Force;
#    Move-Item -Path "$($env:APPVEYOR_BUILD_FOLDER)\PokeEase\dist\win-ia32-unpacked\*" -Destination "$($env:APPVEYOR_BUILD_FOLDER)\$($env:PLATFORM)\$($env:CONFIGURATION)\RocketBot2\PokeEase" -Force;
        

# to run your custom scripts instead of automatic MSBuild
build_script:

#---------------------------------#
#       tests configuration       #
#---------------------------------#

# to disable automatic tests
test: off

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:

  - path: '\$(PLATFORM)\$(CONFIGURATION)\RocketBot2'
    name: RocketBot2
    
#  - path: '\$(PLATFORM)\$(CONFIGURATION)\android-debug.apk'
#    name: android-debug

#  - path: '\$(PLATFORM)\$(CONFIGURATION)\android-debug-unaligned.apk'
#    name: android-debug-unaligned
    
#  - path: '\$(PLATFORM)\$(CONFIGURATION)\android-release-unsigned.apk'
#    name: android-release-unsigned
    
#  - path: '\$(PLATFORM)\$(CONFIGURATION)\PokeEase'
#    name: PokeEase

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# providers: Local, FTP, WebDeploy, AzureCS, AzureBlob, S3, NuGet, Environment
# provider names are case-sensitive!
deploy:

  # Deploy to GitHub Releases
  - provider: GitHub
    tag: $(APPVEYOR_REPO_TAG_NAME)
    description: '[CHANGELOG.md](https://github.com/TheUnnamedOrganisation/RocketBot/blob/master/CHANGELOG.md)'
    release: RocketBot2 $(APPVEYOR_REPO_TAG_NAME)
    auth_token: $(auth_token)
    artifact: RocketBot2 #;android-debug;android-debug-unaligned;android-release-unsigned;PokeEase
    draft: false
    prerelease: false
    force_update: true
    on:
      appveyor_repo_tag: true

# scripts to run before deployment
before_deploy:
- ps: >-
    $fileContent = "-----BEGIN RSA PRIVATE KEY-----`n";
    $fileContent += $env:priv_key.Replace(' ', "`n");
    $fileContent += "`n-----END RSA PRIVATE KEY-----`n";
    Set-Content "$env:USERPROFILE\.ssh\id_rsa" "$($fileContent)";
    Set-Content "$env:USERPROFILE\.git-credentials" "https://$($env:auth_token):x-oauth-basic@github.com`n";

- git config --global credential.helper store
- git config --global user.email "%github_email%"
- git config --global user.name "%github_user%"
- git checkout -b Appveyor "%APPVEYOR_REPO_BRANCH%"
- SET PATH=C:\Ruby23-x64\bin;%PATH%

# Print version and location for pre-installed ruby
- ruby --version
- where ruby

# Install latest version of RubyGems
- gem update --system --no-document --no-post-install-message
- gem --version
- where gem

# Print version and location for pre-installed bundler
#- bundler --version
#- where bundler

# Install ruby dependencies
- gem install bundler
- bundle install
#- bundle install --retry 3
- bundle exec github_changelog_generator

- git add "CHANGELOG.md"
- git add "RocketBot2/Properties/AssemblyInfo.cs"
- git commit -m "%APPVEYOR_REPO_TAG_NAME%"
- git checkout "%APPVEYOR_REPO_BRANCH%"
- git merge Appveyor
- git branch -d Appveyor
- git pull "origin" "%APPVEYOR_REPO_BRANCH%"
- git push "origin" "%APPVEYOR_REPO_BRANCH%"

# scripts to run after deployment
after_deploy:

# to run your custom scripts instead of provider deployments
deploy_script:

# to disable deployment
#deploy: off

#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
on_success:

# on build failure
on_failure:

# after build failure or success
on_finish:
