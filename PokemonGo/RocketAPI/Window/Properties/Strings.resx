<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="account" xml:space="preserve">
    <value>Account: {0}</value>
  </data>
  <data name="action_in_play" xml:space="preserve">
    <value>A action is in play... Please wait.</value>
  </data>
  <data name="action_in_play_unban" xml:space="preserve">
    <value>An action is in play, please wait until it's done.</value>
  </data>
  <data name="area" xml:space="preserve">
    <value>Area: </value>
  </data>
  <data name="argument_null" xml:space="preserve">
    <value>Argument Null Refference - Restarting</value>
  </data>
  <data name="attempt" xml:space="preserve">
    <value>Attempt: </value>
  </data>
  <data name="bot_stop" xml:space="preserve">
    <value>Bot successfully stopped.</value>
  </data>
  <data name="check_update_failed" xml:space="preserve">
    <value>Unable to check for updates now...</value>
  </data>
  <data name="chose_pokestop" xml:space="preserve">
    <value>Chosen PokeStop {0} for force unban</value>
  </data>
  <data name="country" xml:space="preserve">
    <value>Country: </value>
  </data>
  <data name="current_lvl" xml:space="preserve">
    <value>Current Level: {0} ({1}/{2})</value>
  </data>
  <data name="eggs" xml:space="preserve">
    <value>, Eggs: {0}</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="error_country" xml:space="preserve">
    <value>Unable to get Country/Place</value>
  </data>
  <data name="evolve_pieces" xml:space="preserve">
    <value>Evolved {0} pieces of {1} for {2}xp</value>
  </data>
  <data name="evolve_success" xml:space="preserve">
    <value>Evolved {0} successfully for {1}xp</value>
  </data>
  <data name="force_unban_in_action" xml:space="preserve">
    <value>A force unban attempt is in action... Please wait.</value>
  </data>
  <data name="force_unban_start_before" xml:space="preserve">
    <value>Please start the bot before trying to force unban</value>
  </data>
  <data name="gems" xml:space="preserve">
    <value>, Gems: {0}</value>
  </data>
  <data name="github_link" xml:space="preserve">
    <value>You can find it at www.github.com/DetectiveSquirrel/Pokemon-Go-Rocket-API</value>
  </data>
  <data name="github_version" xml:space="preserve">
    <value>Github version is </value>
  </data>
  <data name="grinding_finished" xml:space="preserve">
    <value>Finished grinding all the meat</value>
  </data>
  <data name="grinding_start" xml:space="preserve">
    <value>Grinding {pokemonToDiscard.Count} pokemon below {cpThreshold} CP.</value>
  </data>
  <data name="items" xml:space="preserve">
    <value>, Items: {0}</value>
  </data>
  <data name="IV_less" xml:space="preserve">
    <value>Pokemon {0} with {1} CP has IV percent less than {2}%</value>
  </data>
  <data name="latitude" xml:space="preserve">
    <value>Latitude: {0}</value>
  </data>
  <data name="login_type_Google" xml:space="preserve">
    <value>Login Type: Google</value>
  </data>
  <data name="login_type_PTC" xml:space="preserve">
    <value>Login Type: Pokemon Trainers Club</value>
  </data>
  <data name="longitude" xml:space="preserve">
    <value>Longitude: {0}</value>
  </data>
  <data name="lucky_egg_error" xml:space="preserve">
    <value>Unhandled exception in using lucky egg: {0}</value>
  </data>
  <data name="lucky_egg_start_before" xml:space="preserve">
    <value>Please start the bot before trying to use a lucky egg.</value>
  </data>
  <data name="lucky_egg_validity" xml:space="preserve">
    <value>Lucky Egg Valid until: {0}</value>
  </data>
  <data name="lvlup" xml:space="preserve">
    <value>Current Level: {0}. XP needed for next Level: {1}</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>Name: {0}</value>
  </data>
  <data name="no_location" xml:space="preserve">
    <value>No nearby useful locations found. Please wait 10 seconds.</value>
  </data>
  <data name="no_lucky_egg" xml:space="preserve">
    <value>You don't have any Lucky Egg to use.</value>
  </data>
  <data name="null_reference" xml:space="preserve">
    <value>Null Refference - Restarting</value>
  </data>
  <data name="opening_Google" xml:space="preserve">
    <value>Now opening www.google.com/device and copying the 8 digit code to your clipboard</value>
  </data>
  <data name="out_of_range" xml:space="preserve">
    <value>ArgumentOutOfRangeException - Restarting</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>Password: {0}</value>
  </data>
  <data name="pokecoin" xml:space="preserve">
    <value>Pokecoins: {0}</value>
  </data>
  <data name="pokemon_caught" xml:space="preserve">
    <value>We caught a {0} with {1} CP and {2}% IV</value>
  </data>
  <data name="pokemon_got_away" xml:space="preserve">
    <value>{0} with {1} CP and {2}% IV got away...</value>
  </data>
  <data name="pokestop" xml:space="preserve">
    <value>PokeStop: </value>
  </data>
  <data name="ptc_error" xml:space="preserve">
    <value>PTC Servers are probably down OR your credentials are wrong. Try google</value>
  </data>
  <data name="RazzBerryMode_CP" xml:space="preserve">
    <value>cp</value>
  </data>
  <data name="RazzBerryMode_probability" xml:space="preserve">
    <value>probability</value>
  </data>
  <data name="stardust" xml:space="preserve">
    <value>Stardust: {0}</value>
  </data>
  <data name="start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="start_unban" xml:space="preserve">
    <value>Starting force unban...</value>
  </data>
  <data name="status" xml:space="preserve">
    <value>{0} | Level: {1:0} - ({3:0}/{4:0}) | Runtime {2} | Stardust: {5:0} | XP/Hour: {6} | Pokemon/Hour: {7}  | NextLevel in: {8}:{9}:{10}</value>
  </data>
  <data name="stopping_bot" xml:space="preserve">
    <value>Stopping the bot.. Waiting for the last action to be complete.</value>
  </data>
  <data name="stop_bot" xml:space="preserve">
    <value>Stop Bot</value>
  </data>
  <data name="task_canceled" xml:space="preserve">
    <value>Task Canceled Exception - Restarting</value>
  </data>
  <data name="team" xml:space="preserve">
    <value>Team: {0}</value>
  </data>
  <data name="transfer" xml:space="preserve">
    <value>Transferred {0} with {1} CP</value>
  </data>
  <data name="transfering_disabled" xml:space="preserve">
    <value>Transfering pokemon disabled</value>
  </data>
  <data name="TransferType_All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="TransferType_CP" xml:space="preserve">
    <value>CP</value>
  </data>
  <data name="TransferType_Duplicate" xml:space="preserve">
    <value>Duplicate</value>
  </data>
  <data name="TransferType_IV" xml:space="preserve">
    <value>IV</value>
  </data>
  <data name="TransferType_IV_Duplicate" xml:space="preserve">
    <value>IV Duplicate</value>
  </data>
  <data name="TransferType_Strongest" xml:space="preserve">
    <value>Leave Strongest</value>
  </data>
  <data name="transfer_failed" xml:space="preserve">
    <value>Somehow failed to transfer {0} with {1} CP. ReleasePokemonOutProto.Status was {2}</value>
  </data>
  <data name="transfer_highest_CP" xml:space="preserve">
    <value>Transferred {0} with {1} CP (Highest is {2})</value>
  </data>
  <data name="transfer_highest_IV" xml:space="preserve">
    <value>Transferred {0} with {1}% IV (Highest is {2}% IV)</value>
  </data>
  <data name="unbanned" xml:space="preserve">
    <value>Fuck yes, you are now unbanned! Total attempts: </value>
  </data>
  <data name="unban_failed" xml:space="preserve">
    <value>Force unban failed, please try again.</value>
  </data>
  <data name="unhandled_exception" xml:space="preserve">
    <value>Unhandled exception: {0}</value>
  </data>
  <data name="uri_exception" xml:space="preserve">
    <value>System URI Format Exception - Restarting</value>
  </data>
  <data name="using_lucky_egg" xml:space="preserve">
    <value>Using a Lucky Egg, we have {0} left.</value>
  </data>
  <data name="visiting_pokestops" xml:space="preserve">
    <value>Visiting {0} PokeStops</value>
  </data>
  <data name="waiting_farming" xml:space="preserve">
    <value>Waiting for last farming action to be complete...</value>
  </data>
  <data name="xp" xml:space="preserve">
    <value>, XP: {0}</value>
  </data>
  <data name="your_version" xml:space="preserve">
    <value>Your version is </value>
  </data>
  <data name="email" xml:space="preserve">
    <value>Email: </value>
  </data>
  <data name="encounter_pokemon" xml:space="preserve">
    <value>Encounter a {0} with {1} CP and {2}% IV</value>
  </data>
  <data name="evolved_failed" xml:space="preserve">
    <value>{0} could not be evolved</value>
  </data>
  <data name="evolved_failed_title" xml:space="preserve">
    <value>Evolve {0} failed</value>
  </data>
  <data name="evolved_success" xml:space="preserve">
    <value>{0} successfully evolved into {1}\n{2} experience awarded\n{3} candy awarded</value>
  </data>
  <data name="evolved_success_title" xml:space="preserve">
    <value>{0} evolved into {1}</value>
  </data>
  <data name="google" xml:space="preserve">
    <value>google</value>
  </data>
  <data name="moving_player" xml:space="preserve">
    <value>Moving player location to Lat: {0}, Lng: {1}</value>
  </data>
  <data name="transfer_candy" xml:space="preserve">
    <value>{0} was transferred ! {1} candy awarded</value>
  </data>
  <data name="transfer_candy_title" xml:space="preserve">
    <value>{0} transferred</value>
  </data>
  <data name="transfer_error" xml:space="preserve">
    <value>{0} could not be transferred</value>
  </data>
  <data name="transfer_error_title" xml:space="preserve">
    <value>Transfer {0} failed</value>
  </data>
  <data name="transfer_question" xml:space="preserve">
    <value>Are you sure you want to transfer {0} with {1} CP?</value>
  </data>
  <data name="transfer_title" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="upgrade_error" xml:space="preserve">
    <value>{0} could not be upgraded</value>
  </data>
  <data name="upgrade_error_title" xml:space="preserve">
    <value>Upgrade {0} failed</value>
  </data>
  <data name="upgrade_success" xml:space="preserve">
    <value>{0} successfully upgraded.</value>
  </data>
  <data name="upgrade_success_title" xml:space="preserve">
    <value>{0} upgraded</value>
  </data>
  <data name="username" xml:space="preserve">
    <value>Username: </value>
  </data>
</root>